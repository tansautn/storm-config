<templateSet group="Angular Templates">
  <template name="fngctrl" value="(function(angular){&#10;    &quot;use strict&quot;;&#10;    angular.module('$moduleName$')&#10;        .controller('$controllerName$Controller', $controllerNameCapitilized$Controller);&#10;    function $controllerNameCapitilized$Controller($scope){&#10;        var $this$ = this;&#10;        $END$&#10;    }&#10;    &#10;})(angular);" description="Add a controller to a module wrapped in an IIFE" toReformat="false" toShortenFQNames="true" deactivated="true">
    <variable name="moduleName" expression="suggestAngularModuleName()" defaultValue="app.controllers" alwaysStopAt="true" />
    <variable name="controllerName" expression="" defaultValue="" alwaysStopAt="true" />
    <variable name="controllerNameCapitilized" expression="capitalize(controllerName)" defaultValue="" alwaysStopAt="true" />
    <variable name="this" expression="enum(&quot;ctrl&quot;, &quot;_this&quot;, &quot;vm&quot;)" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="JS_STATEMENT" value="true" />
    </context>
  </template>
  <template name="fngcpn" value="(function(angular){&#10;    &quot;use strict&quot;;&#10;    angular.module('$moduleName$')&#10;        .component('$componentName$Component', {&#10;            templateUrl : './views/components/$tplUrl$.component.tpl.html',&#10;            controller : $ctrl$,&#10;            bindings : {$bind$}&#10;        });&#10;    &#10;    function $ctrl$($scope){&#10;        $END$&#10;    }&#10;    &#10;})(angular);" description="Add a module component wrapped in an IIFE" toReformat="false" toShortenFQNames="true" deactivated="true">
    <variable name="moduleName" expression="suggestAngularModuleName()" defaultValue="app.components" alwaysStopAt="true" />
    <variable name="componentName" expression="camelCase(String)" defaultValue="" alwaysStopAt="true" />
    <variable name="tplUrl" expression="capitalize(String)" defaultValue="" alwaysStopAt="true" />
    <variable name="ctrl" expression="capitalize(String)" defaultValue="" alwaysStopAt="true" />
    <variable name="bind" expression="enum(...)" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="JS_STATEMENT" value="true" />
    </context>
  </template>
  <template name="@controller iife" value="(function(){&#10;    &quot;use strict&quot;;&#10;    angular.module('$moduleName$')&#10;        .controller('$controllerName$Controller',['$scope', $controllerNameCapitilized$Controller]);&#10;    function $controllerNameCapitilized$Controller($scope){&#10;        var $this$ = this;&#10;        $END$&#10;    }&#10;    &#10;})();" description="Add a controller to a module wrapped in an IIFE" toReformat="false" toShortenFQNames="true" deactivated="true">
    <variable name="moduleName" expression="suggestAngularModuleName()" defaultValue="" alwaysStopAt="true" />
    <variable name="controllerName" expression="" defaultValue="" alwaysStopAt="true" />
    <variable name="controllerNameCapitilized" expression="capitalize(controllerName)" defaultValue="" alwaysStopAt="true" />
    <variable name="this" expression="enum(&quot;ctrl&quot;, &quot;_this&quot;, &quot;vm&quot;)" defaultValue="" alwaysStopAt="true" />
  </template>
  <template name="@iife" value="(function(){&#10;    &quot;use strict&quot;;&#10;    angular.module('$moduleName$')&#10;        .$componentType$('$componentName$',['$scope', $factoryName$]);&#10;    &#10;    function $factoryName$($scope){&#10;        $END$&#10;    }&#10;    &#10;})();" description="Add a module component (directive, controller, etc) wrapped in an IIFE" toReformat="false" toShortenFQNames="true" deactivated="true">
    <variable name="moduleName" expression="suggestAngularModuleName()" defaultValue="" alwaysStopAt="true" />
    <variable name="componentType" expression="enum(&quot;directive&quot;, &quot;controller&quot;, &quot;filter&quot;, &quot;factory&quot;)" defaultValue="" alwaysStopAt="true" />
    <variable name="componentName" expression="" defaultValue="" alwaysStopAt="true" />
    <variable name="factoryName" expression="angularFactory(componentType, componentName)" defaultValue="" alwaysStopAt="true" />
  </template>
  <template name="@directive iife" value="(function(){&#10;    &quot;use strict&quot;;&#10;    angular.module('$moduleName$')&#10;        .directive('$directiveName$',[ $directiveName$Directive]);&#10;    &#10;    function $directiveName$Directive(){&#10;        return {&#10;            restrict: &quot;$restrict$&quot;,&#10;            $fn$: $fn$Fn&#10;        };&#10;        &#10;        function $fn$Fn($fnSignature$){&#10;            $END$&#10;        }&#10;    }&#10;    &#10;})();" description="Add a directive to a module wrapped in an IIFE" toReformat="false" toShortenFQNames="true" deactivated="true">
    <variable name="moduleName" expression="suggestAngularModuleName()" defaultValue="" alwaysStopAt="true" />
    <variable name="directiveName" expression="" defaultValue="" alwaysStopAt="true" />
    <variable name="restrict" expression="enum(&quot;E&quot;, &quot;A&quot;, &quot;C&quot;, &quot;EA&quot;, &quot;AC&quot;, &quot;EAC&quot;)" defaultValue="" alwaysStopAt="true" />
    <variable name="fn" expression="enum(&quot;compile&quot;, &quot;link&quot;)" defaultValue="" alwaysStopAt="true" />
    <variable name="fnSignature" expression="AngularMethodSignatureMacro(fn)" defaultValue="" alwaysStopAt="true" />
  </template>
  <template name="@factory iife" value="(function(){&#10;    &quot;use strict&quot;;&#10;    angular.module('$moduleName$')&#10;        .factory('$factoryName$',[ $factoryName$Factory]);&#10;    &#10;    function $factoryName$Factory(){&#10;        $END$&#10;    }&#10;    &#10;})();" description="Add a factory to a module wrapped in an IIFE" toReformat="false" toShortenFQNames="true" deactivated="true">
    <variable name="moduleName" expression="suggestAngularModuleName()" defaultValue="" alwaysStopAt="true" />
    <variable name="factoryName" expression="" defaultValue="" alwaysStopAt="true" />
  </template>
  <template name="@service iife" value="(function(){&#10;    &quot;use strict&quot;;&#10;    angular.module('$moduleName$')&#10;        .service('$serviceInstanceName$',[ $serviceConstructor$]);&#10;    &#10;    function $serviceConstructor$(){&#10;        $END$&#10;    }&#10;    &#10;})();" description="Add a service to a module wrapped in an IIFE" toReformat="false" toShortenFQNames="true" deactivated="true">
    <variable name="moduleName" expression="suggestAngularModuleName()" defaultValue="" alwaysStopAt="true" />
    <variable name="serviceInstanceName" expression="" defaultValue="" alwaysStopAt="true" />
    <variable name="serviceConstructor" expression="capitalize(serviceInstanceName)" defaultValue="" alwaysStopAt="true" />
  </template>
  <template name="@provider iife" value="(function(angular){&#10;    &quot;use strict&quot;;&#10;    angular.module('$moduleName$')&#10;        .provider('$instanceName$',[ $instanceNameCapitalized$Provider]);&#10;    &#10;    function $instanceNameCapitalized$Provider(){&#10;        this.$get = function $instanceName$Factory(){&#10;            $END$        &#10;        }&#10;    }&#10;    &#10;})(angular);" description="Add a provider to a module wrapped in  an IIFE" toReformat="false" toShortenFQNames="true" deactivated="true">
    <variable name="moduleName" expression="suggestAngularModuleName()" defaultValue="" alwaysStopAt="true" />
    <variable name="instanceName" expression="" defaultValue="" alwaysStopAt="true" />
    <variable name="instanceNameCapitalized" expression="capitalize(instanceName)" defaultValue="" alwaysStopAt="true" />
  </template>
</templateSet>